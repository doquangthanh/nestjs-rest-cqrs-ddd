version: "3.7"

services:
  proxy:
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']

  nest:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - DATABASE_HOST=database
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT=6379
      - REDIS_SLAVE_HOST=redis-slave
      - REDIS_SLAVE_PORT=6379
    volumes:
      - ./src:/app/src
      - ./libs:/app/libs

  redis-master:
    image: kyhsa93/redis-master
    restart: always

  redis-slave:
    image: kyhsa93/redis-slave
    restart: always

  database:
    image: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=nest
      - MYSQL_ROOT_PASSWORD=test
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    cap_add:
      - SYS_NICE
    volumes:
      - ./database/nest:/var/lib/mysql
  postgres:
    image: postgres:10.7
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: nest
      POSTGRES_USER: test
      POSTGRES_DB: test
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ./database/nest:/var/lib/postgresql/data
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
